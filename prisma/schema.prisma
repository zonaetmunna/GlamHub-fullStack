generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// user relatd model
model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String        @unique
  password     String
  orders       Order[]
  profileImage String?
  Appointment  Appointment[]
  createdAt    DateTime      @default(now())
}

// product related model
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  imageUrl    String?
  stockCount  Int
  Category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String   @db.ObjectId
  Order       Order?   @relation(fields: [orderId], references: [id])
  orderId     String?  @db.ObjectId
  createdAt   DateTime @default(now())
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[]
}

// order 
model Order {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  products  Product[]
  status    String
  createdAt DateTime  @default(now())
}

// services related model
model Service {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  imageUrl    String?
  createdAt   DateTime @default(now())

  // Define the relation to appointments
  appointments Appointment[]
}

model Appointment {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
  scheduledTime DateTime // Date and time of the appointment
  status        String // Appointment status (e.g., confirmed, canceled, etc.)
  createdAt     DateTime @default(now())

  // Define the relation to service
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId String  @db.ObjectId
}
